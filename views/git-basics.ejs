<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Version Control and Git</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 900px;
            margin: 20px auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #007BFF;
        }
        h2 {
            color: #0056b3;
            border-bottom: 2px solid #007BFF;
            padding-bottom: 5px;
            margin-bottom: 15px;
        }
        h3 {
            color: #333;
            margin-top: 20px;
        }
        p {
            margin: 15px 0;
        }
        ul {
            margin: 10px 0;
            padding-left: 20px;
        }
        li {
            margin-bottom: 10px;
        }
        code {
            background: #e9ecef;
            border-radius: 4px;
            padding: 2px 4px;
            font-size: 90%;
        }
        .command {
            background-color: #f8f9fa;
            border-left: 4px solid #007BFF;
            padding: 10px;
            margin: 10px 0;
            font-family: monospace;
        }
        .diagram {
            margin: 20px 0;
            padding: 10px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
            font-family: monospace;
            white-space: pre-wrap;
        }
        a {
            color: #007BFF;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <%- include('./partials/nav.ejs'); %>
    <div class="container">
        <h1>Version Control</h1>
        <p>Version control, also known as source control, is the practice of tracking and managing changes to software code. Version control systems are software tools that help software teams manage changes to source code over time. We have Git, GitLab, etc. In our case, we have <code>git</code>.</p>
        
        <h2>Git</h2>
        <p>Imagine your project as a tree trunk. The trunk has branches. In the context of the project, think of the branch as different coders who are working on different features of the project. For example, a charity website is one trunk. The branches could be:</p>
        <ul>
            <li>Authentication - login / signup / forgot-password</li>
            <li>Homepage</li>
            <li>Gallery</li>
            <li>About Us</li>
        </ul>
        <p>Each programmer can track their own work. They can see the changes they make and add messages about each change. The software that helps them track their work is called <code>git</code>. Git can be downloaded and installed from <a href="https://git-scm.com/" target="_blank">git-link</a>.</p>
        
        <h3>How Git Helps</h3>
        <ul>
            <li>Tracking each change of the file, e.g., addition or deletion of a file, folder, or lines of code in a file.</li>
        </ul>

        <h3>Starting a New Project</h3>
        <p>If a programmer is working on a new project, they can start tracking it with Git by running:</p>
        <div class="command">git init</div>
        <p>This command creates a hidden <code>.git</code> folder in the root of the project directory. On Linux, you can view it using <code>ls -a</code>, or on Windows by enabling "view hidden files" in the Control Panel if it’s not visible.</p>
        
        <h3>Viewing Others’ Work</h3>
        <p>To see other programmers' work on your computer, you can use:</p>
        <ul>
            <li><code>git pull</code></li>
            <li><code>git fetch</code></li>
        </ul>
        <p>After you pull/fetch, you can either:</p>
        <ul>
            <li>Rebase and merge</li>
            <li>Merge</li>
        </ul>
        
        <h3>Contributing to a Project</h3>
        <p>To contribute to a project done by others, you can download it to your local computer using:</p>
        <div class="command">git clone <repository-link></div>
        <p>Go to the GitHub website where the project is hosted, and fetch the link from there.</p>
        
        <h3>Uploading Your Work</h3>
        <p>To upload your work to GitHub, follow these stages:</p>
        <ol>
            <li><code>git add .</code> or <code>git add filename</code></li>
            <li><code>git commit -m "message"</code></li>
            <li><code>git push -u origin branch-name</code></li>
        </ol>
        
        <h3>Creating a Branch</h3>
        <p>To create a branch, use:</p>
        <ul>
            <li><code>git branch branchname</code></li>
            <li><code>git checkout -b branchname</code></li>
        </ul>
        <p>To view the current branch, use:</p>
        <div class="command">git branch</div>
        <p>To view all branches in the project, use:</p>
        <div class="command">git branch -a</div>
        
        <h3>Switching Branches</h3>
        <p>To switch from one branch to another, use:</p>
        <div class="command">git checkout branchname</div>
        
        <h3>Branch Structure</h3>
        <p>In many projects, there is a main branch used for all correct work, and other branches are merged into this. This branch is what is pushed to production and is usually called <code>master</code> or <code>main</code>.</p>
        <div class="diagram">
        main - production<br>
            |<br>
            |<br>
        staging branch - testing<br>
            |<br>
            |<br>
        develop branch - development<br>
          /\\<br>
         /  \\<br>
        other branches
        </div>
        
        <h3>Uploading to GitHub</h3>
        <p>At the end of the day, once each programmer finishes working on their section, they need to upload the code to the cloud. This cloud is called GitHub. GitHub is the online platform that manages these projects.</p>
        
        <h3>Additional Terms</h3>
        <ul>
            <li><strong>Pull Request:</strong> A method of submitting contributions to a project.</li>
            <li><strong>Rebase:</strong> A way to integrate changes from one branch into another.</li>
        </ul>
    </div>
</body>
</html>
